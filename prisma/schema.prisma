// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  user
  admin
}

model User {
  id        Int      @id @default(autoincrement())
  name      String   @db.VarChar(255)
  email     String   @unique
  role      UserRole @default(user)
  password  String   @db.VarChar(60)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model Movie {
  id          Int           @id @default(autoincrement())
  title       String        @db.VarChar(255)
  description String        @db.Text
  posterImage String        @db.Text
  genders     Gender[]      @relation("MovieGender")
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  MovieGender MovieGender[]

  @@map("movies")
}

model Gender {
  id          Int           @id @default(autoincrement())
  name        String        @db.VarChar(255)
  movies      Movie[]       @relation("MovieGender")
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
  MovieGender MovieGender[]

  @@map("genders")
}

model MovieGender {
  id        Int      @id @default(autoincrement())
  movieId   Int
  genderId  Int
  movie     Movie    @relation(fields: [movieId], references: [id])
  gender    Gender   @relation(fields: [genderId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([movieId, genderId])
  @@map("movie_genders")
}
